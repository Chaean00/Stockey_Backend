name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main # 배포할 브랜치

jobs:
  build-and-push-iamge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지를 빌드하고 푸시
      - name: Build and Push Docker Image
        run: |
          # Docker 이미지를 빌드
          docker build -t ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest .
          # Docker 이미지를 Docker Hub에 푸시
          docker push ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest


  deploy-server1:
    name: Delpoy Server 1
    runs-on: ubuntu-latest
    needs: build-and-push-iamge

    steps:
      - name: Delpoy Server 1
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: $${{ secrets.BACK_SERVER_HOST_01 }}
          username: $${{ secrets.BACK_SERVER_USER_01 }}
          key: $${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu

            # .env 파일 생성
            echo "SLACK_API_TOKEN=${{ secrets.SLACK_API_TOKEN }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
            echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
            echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
            echo "TZ=Asia/Seoul" >> .env

            # 도커 이미지 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest

            # 기존에 실행 중인 컨테이너가 있으면 중지하고 제거
            docker stop stockey-express || true
            docker rm stockey-express || true

            # 컨테이너 실행
            docker run -d --name stockey-express --env-file .env -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest

  deploy-server2:
    name: Delpoy Server 2
    runs-on: ubuntu-latest
    needs: build-and-push-iamge

    steps:
      - name: Delpoy Server 2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: $${{ secrets.BACK_SERVER_HOST_02 }}
          username: $${{ secrets.BACK_SERVER_USER_02 }}
          key: $${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu

            # .env 파일 생성
            echo "SLACK_API_TOKEN=${{ secrets.SLACK_API_TOKEN }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
            echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
            echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
            echo "TZ=Asia/Seoul" >> .env

            # 도커 이미지 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest

            # 기존에 실행 중인 컨테이너가 있으면 중지하고 제거
            docker stop stockey-express || true
            docker rm stockey-express || true

            # 컨테이너 실행
            docker run -d --name stockey-express --env-file .env -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest
